name: Test, Build, and Deploy

on:
  push:
    branches:
    - master
    
jobs:
  bundle:
    runs-on: ubuntu-latest
    steps:
      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CNC07GN01\",\"text\":\"starting build...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: checkout repo
        uses: actions/checkout@v1
      - name: install node
        uses: actions/setup-node@v1
      - name: install npm deps
        run: npm ci
      - name: run tests
        run: npm test
      - name: bundle into dist
        run: npm run bundle
      - name: upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: dist 
          path: dist 
      - name: Notify slack of all status
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CNC07GN01\",\"text\":\"build status: ${{job.status}}\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()
      - name: Notify slack of success and deploy will happen
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CNC07GN01\",\"text\":\"Preparing for deploy...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: success()

  deploy:
    runs-on: ubuntu-latest
    needs: bundle
    steps:
      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CNC07GN01\",\"text\":\"starting deploy...\"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      - name: checkout repo
        uses: actions/checkout@v1
      - name: download artifacts
        uses: actions/download-artifact@master
        with:
          name: dist 
          path: dist 
      - name: deploy to firebase
        uses: w9jds/firebase-action@v1.0.1
        with:
          args: deploy --only hosting
        env:
          PROJECT_ID: tjandpals-whats-this
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      - name: Notify slack
        uses: pullreminders/slack-action@master
        with:
          args: '{\"channel\":\"CNC07GN01\",\"text\":\"deploy status: ${{job.status}} \"}'
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        if: always()